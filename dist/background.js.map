{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/background.js","src/js/utils/librato.js"],"names":[],"mappings":"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","file":"background.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var LibratoAPI = require('./utils/librato').Librato;\n\nconst ALARM_NAME = \"com.librato.alerts.fetcher\";\n\nclass Background {\n  constructor() {\n    this.apiClient = null;\n    this.alarm = null;\n    this.activeAlertIds = [];\n    this.firingAlerts = [];\n\n    // Setup Librato API Client, fetch alerts, start alarm\n    new Promise((resolve, reject) => {\n      this.initAPIClient(function(success) {\n        if (success) {\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    })\n    .then(() => {\n      // Check if any alerts already exist...\n      chrome.storage.sync.get('alerts', function(items) {\n        if (items.alerts) {\n          this.firingAlerts = items.alerts;\n          this.activeAlertIds = this.firingAlerts.map(function(a) {\n            return a.id;\n          });\n        }\n        // Query the API for any changes to these alerts. Create alarm\n        this.fetchAlerts();\n        this.createAlarm();\n      }.bind(this));\n    })\n    .catch(function() {\n      console.warn(\"Unable to init API Client due to invalid credentials.\");\n      chrome.browserAction.setBadgeText({text: '?'});\n    });\n\n    // Listen for storage changes\n    chrome.storage.onChanged.addListener(this.onStorageChange.bind(this));\n\n    // Listen for any messages\n    chrome.runtime.onMessage.addListener(this.onMessage.bind(this));\n  }\n\n  initAPIClient(callback) {\n    chrome.storage.sync.get({\n      email: '',\n      token: ''\n    }, (items) => {\n      if (items.email !== '' && items.token !== '') {\n        this.apiClient = new LibratoAPI(items.email, items.token);\n        callback(true);\n      } else {\n        callback(false);\n      }\n    });\n  }\n\n  fetchAlerts() {\n    let previousAlertIds = this.activeAlertIds;\n    let previousFiringAlerts = this.firingAlerts;\n\n    // Clear out firing alerts so alerts that stopped firing are removed\n    this.activeAlertIds = [];\n    this.firingAlerts = [];\n\n    this.apiClient.fetchAlerts((alerts) => {\n      if (alerts && alerts.firing.length) {\n        Promise.all(alerts.firing.map((alert) => {\n          let promise = new Promise((resolve, reject) => {\n            if (previousAlertIds.indexOf(alert.id) < 0) {\n              // First time seeing this alert...\n              this.apiClient.fetchAlert(alert.id, (alertDetail) => {\n                this.activeAlertIds.push(alert.id);\n                alertDetail.triggered_at = alert.triggered_at; // Triggered at isn't returned from /status endpoint\n                this.firingAlerts.push(alertDetail);\n                this.sendNotificationForAlert(alertDetail);\n                resolve();\n              }, function() {\n                reject();\n              });\n            } else {\n              // We have seen this alert already and it is still happening...\n              this.activeAlertIds.push(alert.id);\n              this.firingAlerts.push(previousFiringAlerts.find(function(firingAlert) {\n                return firingAlert.id === alert.id;\n              }));\n              resolve();\n            }\n          });\n\n          return promise;\n        })).then(() =>{\n          this.updateBadgeText();\n          this.updateStorage();\n        });\n      } else {\n        // No alerts exist...\n        this.updateBadgeText();\n        this.updateStorage();\n      }\n    }, function() {\n      console.warn(\"Unable to fetch firing alerts\");\n      chrome.browserAction.setBadgeText({text: '?'});\n      this.clearAlarm(function() {});\n    }.bind(this));\n  }\n\n  updateStorage() {\n    chrome.storage.sync.set({'alerts': this.firingAlerts}, function(bytesInUse) {});\n  }\n\n  updateBadgeText() {\n    let alertsCount = this.activeAlertIds.length;\n    if (alertsCount > 0) {\n      chrome.browserAction.setBadgeText({text: String(alertsCount)});\n    } else {\n      chrome.browserAction.setBadgeText({text: ''});\n    }\n  }\n\n  sendNotificationForAlert(alert) {\n    chrome.notifications.getPermissionLevel(function(level) {\n      if (level === \"granted\") {\n        let message;\n\n        if (alert.conditions.length) {\n          let condition = alert.conditions[0];\n          message = condition.metric_name + \" was \" + condition.type + \" the threshold of \" + condition.threshold + \".\";\n        } else {\n          message = \"\";\n        }\n\n        let opts = {\n          type: \"basic\",\n          title: \"Alert \" + alert.name + \" has triggered!\",\n          message: message,\n          contextMessage: alert.description,\n          iconUrl: \"./icon.png\"\n        };\n\n        chrome.notifications.create(\"\", opts, function(notificationId) {\n        });\n      }\n    }.bind(this));\n  }\n\n  createAlarm() {\n    if (this.alarm === null) {\n      chrome.alarms.create(ALARM_NAME, {periodInMinutes: 1});\n      chrome.alarms.onAlarm.addListener(this.onAlarm.bind(this));\n    }\n  }\n\n  clearAlarm(callback) {\n    chrome.alarms.clear(ALARM_NAME, function(wasCleared) {\n      if (wasCleared) {\n        callback();\n        this.alarm = null;\n      } else {\n        callback();\n      }\n    }.bind(this));\n  }\n\n  purgeData() {\n    console.log('Purging all data. 👋');\n    this.clearAlarm();\n    chrome.browserAction.setBadgeText({text: ''});\n    chrome.storage.sync.clear(function() {});\n    this.apiClient = null;\n    this.activeAlertIds = [];\n    this.firingAlerts = [];\n  }\n\n  onAlarm(alarm) {\n    console.log('Alarm fired');\n    this.fetchAlerts();\n  }\n\n  onStorageChange(changes, areaName) {\n    if (areaName === \"sync\") {\n      if (changes.alerts) {\n        this.firingAlerts = changes.alerts.newValue || [];\n        this.activeAlertIds = this.firingAlerts.map(function(a) { return a.id; });\n      } else if (changes.email || changes.password) {\n        // Credentials were added, changed, or removed.\n\n        if (changes.email.newValue === \"\" || changes.password === \"\") {\n          // Credentials removed. Purge all the things.\n          this.purgeData();\n        } else if (changes.email.oldValue !== changes.email.newValue || changes.token.oldValue !== changes.token.newValue ) {\n          // Credentials were added or changed. Re-init API Client and restart everything\n          this.initAPIClient(function(success) {\n            if (success) {\n              chrome.storage.sync.remove('alerts', function() {\n                this.fetchAlerts();\n                this.clearAlarm(function() {});\n              }.bind(this));\n            }\n          }.bind(this));\n        }\n      }\n    }\n  }\n\n  onMessage(request, sender, sendResponse) {\n    if (request && request.resolvedAlertId) {\n      // Alert was resolved\n      this.apiClient.resolveAlert(request.resolvedAlertId, function() {\n        sendResponse({resolved: true});\n      }, function() {\n        sendResponse({resolved: true});\n      });\n    }\n\n    return true;\n  }\n}\n\nif (chrome.runtime) {\n  if (chrome.runtime.onStartup) {\n    chrome.runtime.onStartup.addListener(function() {\n      new Background();\n    });\n  }\n\n  if (chrome.runtime.onInstalled) {\n    chrome.runtime.onInstalled.addListener(function() {\n      new Background();\n    });\n  }\n}\n","const API_URL = \"https://metrics-api.librato.com\"\nconst API_VERSION = \"v1\"\n\nconst Librato = class Librato {\n  constructor(email, token) {\n    this.email = email;\n    this.token = token;\n    this.baseURL = API_URL + \"/\" + API_VERSION;\n    this.headers = new Headers();\n    let auth = btoa(email + ':' + token);\n    this.headers.append('Authorization', 'Basic ' + auth);\n  }\n\n  fetchAlerts(success, failure) {\n    let req = {\n      method: 'GET',\n      headers: this.headers\n    }\n\n    let url = this.baseURL + \"/alerts/status\"\n    fetch(url, req).then((response) => {\n      if (response.ok) {\n        response.json().then((json) => {\n          success(json);\n        });\n      } else {\n        failure();\n      }\n    })\n  }\n\n  fetchAlert(alertId, success, failure) {\n    let req = {\n      method: 'GET',\n      headers: this.headers\n    }\n\n    let url = this.baseURL + \"/alerts/\" + alertId;\n    fetch(url, req).then((response) => {\n      if (response.ok) {\n        response.json().then((json) => {\n          success(json);\n        });\n      } else {\n        failure();\n      }\n    })\n  }\n\n  resolveAlert(alertId, success, failure) {\n    let url = this.baseURL + \"/alerts/\" + alertId + \"/clear\";\n    let req = {\n      method: 'POST',\n      headers: this.headers\n    }\n    fetch(url, req).then((response) => {\n      if (response.ok) {\n        success();\n      } else {\n        failure();\n      }\n    })\n\n  }\n\n}\n\n\nmodule.exports.Librato = Librato;\n"]}